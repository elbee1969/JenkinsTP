-- configurer le reseau docker
docker network create jenkins

-- optionnel : on peut reconstruire l'image jenkins au lieu de prendre atos06/myjenkins-blueocean:1.2
docker build -t myjenkins-blueocean:1.2 -f Dockerfile-Jenkins .

-- lancer les 2 containers
docker run --name jenkins-docker --rm --detach --privileged --network jenkins --network-alias docker --env DOCKER_TLS_CERTDIR=/certs --volume jenkins-docker-certs:/certs/client --volume jenkins-data:/var/jenkins_home --publish 2376:2376 docker:dind --storage-driver overlay2
docker run --name jenkins-blueocean --rm --detach --network jenkins --env DOCKER_HOST=tcp://docker:2376 --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 --publish 8080:8080 --publish 50000:50000 --volume jenkins-data:/var/jenkins_home --volume jenkins-docker-certs:/certs/client:ro atos06/myjenkins-blueocean:1.2
#docker run --name jenkins-blueocean --rm --detach --network jenkins --env DOCKER_HOST=tcp://docker:2376 --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 --publish 8080:8080 --publish 50000:50000 --volume jenkins-data:/var/jenkins_home --volume jenkins-docker-certs:/certs/client:ro jenkinsci/blueocean

-- ouvrir un navigateur et lancer jenkins
http://localhost:8080

-- dans un terminal, entrer dans le container jenkins
docker exec -it jenkins-blueocean bash
cat /var/jenkins_home/secrets/initialAdminPassword

-- creer le pipeline de deploiement dans jenkins de type "pipeline"

# Pour tester seul nginx en local de 2 façons
docker run -d --name montp -p 8081:80 atos06/ipiformation
docker run -d --name monserver -p 8081:80 <votre login dockerhub>/<votre repo dockerhub>:1.0


-- pour mettre a jour le plugin docker dans jenkins
https://plugins.jenkins.io/docker-workflow/
-- choisir la derneiere releases
-- mettre à jour le plugin
docker pipeline plugin
docker exec -it jenkins-blueocean bash
jenkins-plugin-cli --plugins docker-workflow:528.v7c193a_0b_e67c
